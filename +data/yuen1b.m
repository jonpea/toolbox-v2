function [gain, phi] = yuen1b(varargin)

gain = [
    4.854000 

 4.853000 

 4.848000 

 4.841000 

 4.830000 

 4.816000 

 4.799000 

 4.779000 

 4.756000 

 4.730000 

 4.700000 

 4.668000 

 4.633000 

 4.595000 

 4.554000 

 4.510000 

 4.464000 

 4.415000 

 4.364000 

 4.310000 

 4.254000 

 4.195000 

 4.135000 

 4.072000 

 4.007000 

 3.941000 

 3.873000 

 3.803000 

 3.731000 

 3.658000 

 3.584000 

 3.509000 

 3.433000 

 3.355000 

 3.277000 

 3.198000 

 3.119000 

 3.039000 

 2.959000 

 2.879000 

 2.799000 

 2.719000 

 2.639000 

 2.560000 

 2.481000 

 2.403000 

 2.325000 

 2.248000 

 2.172000 

 2.097000 

 2.024000 

 1.951000 

 1.880000 

 1.810000 

 1.741000 

 1.674000 

 1.609000 

 1.545000 

 1.483000 

 1.422000 

 1.364000 

 1.306000 

 1.251000 

 1.197000 

 1.146000 

 1.096000 

 1.047000 

 1.001000 

 0.955800 

 0.912700 

 0.871200 

 0.831500 

 0.793300 

 0.756700 

 0.721700 

 0.688200 

 0.656200 

 0.625600 

 0.596400 

 0.568500 

 0.541900 

 0.516600 

 0.492500 

 0.469500 

 0.447700 

 0.426900 

 0.407200 

 0.388400 

 0.370600 

 0.353600 

 0.337500 

 0.322300 

 0.307800 

 0.294000 

 0.280900 

 0.268500 

 0.256700 

 0.245500 

 0.234900 

 0.224800 

 0.215200 

 0.206100 

 0.197500 

 0.189300 

 0.181600 

 0.174200 

 0.167200 

 0.160500 

 0.154200 

 0.148200 

 0.142500 

 0.137100 

 0.132000 

 0.127100 

 0.122500 

 0.118200 

 0.114100 

 0.110200 

 0.106500 

 0.103100 

 0.099800 

 0.096730 

 0.093840 

 0.091140 

 0.088610 

 0.086250 

 0.084050 

 0.082010 

 0.080120 

 0.078380 

 0.076790 

 0.075340 

 0.074020 

 0.072850 

 0.071820 

 0.070920 

 0.070160 

 0.069540 

 0.069070 

 0.068750 

 0.068570 

 0.068560 

 0.068710 

 0.069040 

 0.069550 

 0.070260 

 0.071170 

 0.072300 

 0.073650 

 0.075240 

 0.077080 

 0.079170 

 0.081530 

 0.084150 

 0.087060 

 0.090230 

 0.093680 

 0.097400 

 0.101400 

 0.105600 

 0.110000 

 0.114700 

 0.119500 

 0.124500 

 0.129500 

 0.134700 

 0.139800 

 0.145000 

 0.150100 

 0.155000 

 0.159800 

 0.164300 

 0.168600 

 0.172500 

 0.176000 

 0.179200 

 0.181900 

 0.184000 

 0.185700 

 0.186800 

 0.187400 

 0.187400 

 0.186900 

 0.185800 

 0.184200 

 0.182100 

 0.179600 

 0.176500 

 0.173100 

 0.169300 

 0.165200 

 0.160900 

 0.156300 

 0.151600 

 0.146800 

 0.141900 

 0.137000 

 0.132100 

 0.127300 

 0.122600 

 0.118100 

 0.113700 

 0.109500 

 0.105500 

 0.101800 

 0.098270 

 0.095010 

 0.092000 

 0.089250 

 0.086740 

 0.084490 

 0.082480 

 0.080700 

 0.079150 

 0.077820 

 0.076700 

 0.075780 

 0.075060 

 0.074510 

 0.074150 

 0.073950 

 0.073920 

 0.074050 

 0.074330 

 0.074770 

 0.075360 

 0.076100 

 0.076980 

 0.078020 

 0.079220 

 0.080560 

 0.082070 

 0.083730 

 0.085560 

 0.087560 

 0.089730 

 0.092080 

 0.094610 

 0.097330 

 0.100200 

 0.103400 

 0.106700 

 0.110200 

 0.114000 

 0.118000 

 0.122200 

 0.126700 

 0.131400 

 0.136400 

 0.141600 

 0.147200 

 0.153000 

 0.159200 

 0.165700 

 0.172500 

 0.179700 

 0.187200 

 0.195200 

 0.203500 

 0.212300 

 0.221500 

 0.231200 

 0.241500 

 0.252200 

 0.263500 

 0.275400 

 0.287900 

 0.301100 

 0.314900 

 0.329500 

 0.344800 

 0.360900 

 0.377800 

 0.395600 

 0.414300 

 0.434000 

 0.454700 

 0.476400 

 0.499200 

 0.523200 

 0.548300 

 0.574600 

 0.602300 

 0.631200 

 0.661500 

 0.693200 

 0.726300 

 0.761000 

 0.797100 

 0.834800 

 0.874200 

 0.915100 

 0.957700 

 1.002000 

 1.048000 

 1.096000 

 1.145000 

 1.196000 

 1.249000 

 1.304000 

 1.360000 

 1.418000 

 1.478000 

 1.539000 

 1.603000 

 1.667000 

 1.733000 

 1.801000 

 1.870000 

 1.941000 

 2.013000 

 2.086000 

 2.160000 

 2.235000 

 2.311000 

 2.388000 

 2.465000 

 2.544000 

 2.623000 

 2.702000 

 2.781000 

 2.861000 

 2.941000 

 3.020000 

 3.100000 

 3.179000 

 3.257000 

 3.335000 

 3.412000 

 3.489000 

 3.564000 

 3.638000 

 3.711000 

 3.783000 

 3.853000 

 3.922000 

 3.988000 

 4.054000 

 4.117000 

 4.178000 

 4.237000 

 4.294000 

 4.348000 

 4.400000 

 4.450000 

 4.497000 

 4.541000 

 4.583000 

 4.622000 

 4.658000 

 4.691000 

 4.721000 

 4.748000 

 4.772000 

 4.793000 

 4.811000 

 4.826000 

 4.838000 

 4.846000 

 4.852000
 ];

% Consistent with Fortran code
% ============================
% "delta phi" in radians:
%   self%delphi_rad = 2.0d0 * pi / dfloat(self%n)
% Linear interpolation of gains:
%   m = (self%g(idx_upper) - self%g(idx_lower)) / self%delphi_rad
%   z = m * (phid - dfloat(idx_lower - 1) * self%delphi_rad) + self%g(idx_lower)
%
numpoints = numel(gain);
dx = 2*pi/numpoints;
phi = linspace(0, 2*pi - dx, numpoints);
%phi = linspace(0, 2*pi, numel(gain))';

gain(end + 1) = gain(1);
phi(end + 1) = 2*pi;

if nargout < 2
    clf, polarplot(phi, gain, varargin{:});
end

%{
% This code doesn't include the header
% ====================================
newphi = transpose(0 : 360);
newgain = [gain; gain(1)];
assert(isequal(size(newphi), size(newgain)))
% [newphi, permutation] = sort(wrapinterval(newphi, -180, 180));
% newgain = newgain(permutation, :);
% hold on, polarplot(deg2rad(newphi), newgain, 'o')
% figure, plot(rad2deg(phi), gain, '.', newphi, newgain, 'o')
dlmwrite( ...
    fullfile('data', 'yuen1b.txt'), ...
    [newphi, newgain(:)], ...
    'delimiter', ' ', ...
    'precision', 16);
%}
